"""
    Sendbird Platform SDK

    Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@sendbird.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import sendbird_platform_sdk
from sendbird_platform_sdk.api.user_api import UserApi  # noqa: E501


class TestUserApi(unittest.TestCase):
    """UserApi unit test stubs"""

    def setUp(self):
        self.api = UserApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_a_registration_or_device_token(self):
        """Test case for add_a_registration_or_device_token

        Add a registration or device token  # noqa: E501
        """
        pass

    def test_choose_a_push_notification_content_template(self):
        """Test case for choose_a_push_notification_content_template

        Choose a push notification content template  # noqa: E501
        """
        pass

    def test_create_a_user(self):
        """Test case for create_a_user

        Create a user  # noqa: E501
        """
        pass

    def test_create_user_token(self):
        """Test case for create_user_token

        Create user token  # noqa: E501
        """
        pass

    def test_delete_a_user(self):
        """Test case for delete_a_user

        Delete a user  # noqa: E501
        """
        pass

    def test_get_channel_invitation_preference(self):
        """Test case for get_channel_invitation_preference

        Get channel invitation preference  # noqa: E501
        """
        pass

    def test_leave_my_group_channels(self):
        """Test case for leave_my_group_channels

        Leave my group channels  # noqa: E501
        """
        pass

    def test_list_my_group_channels(self):
        """Test case for list_my_group_channels

        List my group channels  # noqa: E501
        """
        pass

    def test_list_registration_or_device_tokens(self):
        """Test case for list_registration_or_device_tokens

        List registration or device tokens  # noqa: E501
        """
        pass

    def test_list_users(self):
        """Test case for list_users

        List users  # noqa: E501
        """
        pass

    def test_mark_all_messages_as_read(self):
        """Test case for mark_all_messages_as_read

        Mark all messages as read  # noqa: E501
        """
        pass

    def test_remove_a_registration_or_device_token(self):
        """Test case for remove_a_registration_or_device_token

        Remove a registration or device token - When unregistering a specific token  # noqa: E501
        """
        pass

    def test_remove_a_registration_or_device_token_from_an_owner(self):
        """Test case for remove_a_registration_or_device_token_from_an_owner

        Remove a registration or device token from an owner  # noqa: E501
        """
        pass

    def test_remove_all_registration_or_device_token(self):
        """Test case for remove_all_registration_or_device_token

        Remove a registration or device token - When unregistering all device tokens  # noqa: E501
        """
        pass

    def test_reset_push_preferences(self):
        """Test case for reset_push_preferences

        Reset push preferences  # noqa: E501
        """
        pass

    def test_update_a_user(self):
        """Test case for update_a_user

        Update a user  # noqa: E501
        """
        pass

    def test_update_channel_invitation_preference(self):
        """Test case for update_channel_invitation_preference

        Update channel invitation preference  # noqa: E501
        """
        pass

    def test_update_count_preference_of_a_channel(self):
        """Test case for update_count_preference_of_a_channel

        Update count preference of a channel  # noqa: E501
        """
        pass

    def test_update_push_preferences(self):
        """Test case for update_push_preferences

        Update push preferences  # noqa: E501
        """
        pass

    def test_update_push_preferences_for_a_channel(self):
        """Test case for update_push_preferences_for_a_channel

        Update push preferences for a channel  # noqa: E501
        """
        pass

    def test_view_a_user(self):
        """Test case for view_a_user

        View a user  # noqa: E501
        """
        pass

    def test_view_count_preference_of_a_channel(self):
        """Test case for view_count_preference_of_a_channel

        View count preference of a channel  # noqa: E501
        """
        pass

    def test_view_number_of_channels_with_unread_messages(self):
        """Test case for view_number_of_channels_with_unread_messages

        View number of channels with unread messages  # noqa: E501
        """
        pass

    def test_view_number_of_unread_messages(self):
        """Test case for view_number_of_unread_messages

        View number of unread messages  # noqa: E501
        """
        pass

    def test_view_push_preferences(self):
        """Test case for view_push_preferences

        View push preferences  # noqa: E501
        """
        pass

    def test_view_push_preferences_for_a_channel(self):
        """Test case for view_push_preferences_for_a_channel

        View push preferences for a channel  # noqa: E501
        """
        pass

    def test_view_who_owns_a_registration_or_device_token(self):
        """Test case for view_who_owns_a_registration_or_device_token

        View who owns a registration or device token  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
